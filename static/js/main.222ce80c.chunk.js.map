{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAA1B,cACnB,gCACI,6BACKF,IAEL,4BAAIC,WCaLK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAAEC,EAAMC,GACf,OACI,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIfC,EAZG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,uBACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCDPI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YC0CHC,G,wDAxCX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAd1C,EAAKC,MAAQ,CACTvB,OAAQ,GACRK,YAAa,IAJP,E,gEAQO,IAAD,OAChBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEpB,OAAQ4B,S,+BAOlC,IAAD,EAC2BC,KAAKN,MAA7BvB,EADH,EACGA,OAAQK,EADX,EACWA,YACVyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAEzD,OAAQjC,EAAOmC,OAGP,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ8B,SAN9B,6C,GAzBWM,cCOJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.222ce80c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id}) => {\r\n    return(\r\n        <div className=' tc bg-light-green dib br3 pa3 ma2 grow bw shadow-5'>\r\n            <img alt='robo' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>\r\n                    {name}\r\n                </h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return( \r\n        <div>\r\n            {\r\n                robots.map(( user, i) => {\r\n                    return (\r\n                        <Card \r\n                         key={i} \r\n                         id={robots[i].id} \r\n                         name={robots[i].name} \r\n                         email={robots[i].email}\r\n                       />\r\n                    ); \r\n                })\r\n            }\r\n         </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba bg-light-blue' \r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange={searchChange} />\r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '800px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList.js';\r\nimport SearchBox from '../Components/SearchBox.js';\r\nimport Scroll from '../Components/Scroll';\r\nimport './App.css';\r\n class App extends Component {\r\n     constructor() {\r\n         super()\r\n         this.state = {\r\n             robots: [],\r\n             searchfield: ''\r\n         }\r\n     }\r\n     \r\n     componentDidMount() {\r\n         fetch('https://jsonplaceholder.typicode.com/users')\r\n         .then(response => response.json())\r\n         .then(users => this.setState({ robots: users}))   \r\n     }\r\n\r\n\r\n     onSearchChange = (event) => {\r\n         this.setState({ searchfield: event.target.value })\r\n     }\r\n     render(){\r\n         const{ robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n        <h1>Loading</h1>:\r\n        (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                    \r\n                </div>\r\n               \r\n        )\r\n        \r\n     }\r\n     \r\n }\r\n export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}